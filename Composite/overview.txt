// Allowing us to treat individual components.
// Objects use other objects' fields/properties/members through inheritance and composition.
// Composition lets us make compound objects.
 - E.g., a mathematical expression composed of simple expressions; or
 - A grouping of shapes that consists of several shapes.
// Composite design pattern is used to treat both single (scalar) and composite objects uniformly.
 - I.e., Foo and Collection<Foo> have common APIs.

